!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$(DUMPTRG)	Makefile	/^$(DUMPTRG): $(TRG) $/;"	t
$(GDBINITFILE)	Makefile	/^$(GDBINITFILE): $(TRG)$/;"	t
$(TRG)	Makefile	/^$(TRG): $(OBJDEPS) $/;"	t
%.s	Makefile	/^%.s: %.S$/;"	t
%.s	Makefile	/^%.s: %.c$/;"	t
.PHONY	Makefile	/^.PHONY: writeserial writeflash clean stats gdbinit stats$/;"	t
.S.o	Makefile	/^.S.o :$/;"	t
.SUFFIXES	Makefile	/^.SUFFIXES : .c .cc .cpp .C .o .out .s .S \\$/;"	t
.c.o	Makefile	/^.c.o: $/;"	t
.out.ee.hex	Makefile	/^.out.ee.hex:$/;"	t
.out.hex	Makefile	/^.out.hex:$/;"	t
ASMFILES	Makefile	/^ASMFILES=$(filter %.S, $(PRJSRC))$/;"	m
ASMFLAGS	Makefile	/^ASMFLAGS =-I. $(INC) -mmcu=$(MCU)        \\$/;"	m
AVRDUDE	Makefile	/^AVRDUDE=avrdude -F$/;"	m
AVRDUDE_PORT	Makefile	/^AVRDUDE_PORT=\/dev\/ttyS0$/;"	m
AVRDUDE_PROGRAMMERID	Makefile	/^AVRDUDE_PROGRAMMERID=ponyser$/;"	m
AVR_EFUSE	Makefile	/^AVR_EFUSE=0xf9$/;"	m
AVR_HFUSE	Makefile	/^AVR_HFUSE=0xdf$/;"	m
AVR_LFUSE	Makefile	/^AVR_LFUSE=0xce$/;"	m
BIGCFILES	Makefile	/^BIGCFILES=$(filter %.C, $(PRJSRC))$/;"	m
BLANK_DDR	config.h	46;"	d
BLANK_PIN	config.h	44;"	d
BLANK_PRT	config.h	45;"	d
BOOTLOADER	Makefile	/^BOOTLOADER=..\/..\/sw\/bootloader\/program.sh$/;"	m
CC	Makefile	/^CC=avr-gcc$/;"	m
CCFILES	Makefile	/^CCFILES=$(filter %.cc, $(PRJSRC))$/;"	m
CFILES	Makefile	/^CFILES=$(filter %.c, $(PRJSRC))$/;"	m
CFLAGS	Makefile	/^CFLAGS=-I. $(INC) -g -mmcu=$(MCU) -O$(OPTLEVEL) \\$/;"	m
CMD_DOALL	config.h	65;"	d
CMD_SYNC	config.h	64;"	d
CPPFILES	Makefile	/^CPPFILES=$(filter %.cpp, $(PRJSRC))$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS=-fno-exceptions               \\$/;"	m
CST_ARGS	main.c	36;"	d	file:
CST_ARGS	main.h	51;"	d
CST_IDLE	main.c	34;"	d	file:
CST_IDLE	main.h	49;"	d
CST_SYNC	main.c	35;"	d	file:
CST_SYNC	main.h	50;"	d
DBGLED_DDR	config.h	57;"	d
DBGLED_PRT	config.h	56;"	d
DBG_OVFLWERR	config.h	69;"	d
DBG_PRTYERR	config.h	68;"	d
DEF_BAUD_DOUBLE	config.h	19;"	d
DEF_BAUD_DOUBLE_SLOW	config.h	21;"	d
DEF_BAUD_PRESCALE	config.h	18;"	d
DEF_BAUD_PRESCALE_SLOW	config.h	20;"	d
DUMPTRG	Makefile	/^DUMPTRG=$(PROJECTNAME).s$/;"	m
EEPROM_BAUD_DBLE	config.h	14;"	d
EEPROM_BAUD_RATE	config.h	15;"	d
EEPROM_INST_ADDR	config.h	13;"	d
F_CPU	config.h	11;"	d
GDBINITFILE	Makefile	/^GDBINITFILE=gdbinit-$(PROJECTNAME)$/;"	m
GENASMFILES	Makefile	/^GENASMFILES=$(filter %.s, $(OBJDEPS:.o=.s)) $/;"	m
GSCLK_DDR	config.h	50;"	d
GSCLK_PIN	config.h	48;"	d
GSCLK_PRT	config.h	49;"	d
HEXFORMAT	Makefile	/^HEXFORMAT=ihex$/;"	m
HEXROMTRG	Makefile	/^HEXROMTRG=$(PROJECTNAME).hex $/;"	m
HEXTRG	Makefile	/^HEXTRG=$(HEXROMTRG) $(PROJECTNAME).ee.hex$/;"	m
INC	Makefile	/^INC=$/;"	m
ISR	uart.c	/^ISR(USART_RX_vect) {$/;"	f
LDFLAGS	Makefile	/^LDFLAGS=-Wl,-Map,$(TRG).map -mmcu=$(MCU) \\$/;"	m
LIBS	Makefile	/^LIBS=$/;"	m
LST	Makefile	/^LST=$(filter %.lst, $(OBJDEPS:.o=.lst))$/;"	m
MCU	Makefile	/^MCU=atmega168p$/;"	m
OBJCOPY	Makefile	/^OBJCOPY=avr-objcopy$/;"	m
OBJDEPS	Makefile	/^OBJDEPS=$(CFILES:.c=.o)    \\$/;"	m
OBJDEPS=$(CFILES	Makefile	/^OBJDEPS=$(CFILES:.c=.o)    \\$/;"	t
OBJDUMP	Makefile	/^OBJDUMP=avr-objdump$/;"	m
OPTLEVEL	Makefile	/^OPTLEVEL=2$/;"	m
PRJSRC	Makefile	/^PRJSRC=main.c dbgled.c eeprom.c led.c tlc.c uart.c$/;"	m
PROGRAMMER_MCU	Makefile	/^PROGRAMMER_MCU=m168$/;"	m
PROJECTNAME	Makefile	/^PROJECTNAME=ledctrlr$/;"	m
REMOVE	Makefile	/^REMOVE=rm -f$/;"	m
SCLK_DDR	config.h	33;"	d
SCLK_PIN	config.h	31;"	d
SCLK_PRT	config.h	32;"	d
SDAT_DDR	config.h	29;"	d
SDAT_PIN	config.h	27;"	d
SDAT_PRT	config.h	28;"	d
SDSS_DDR	config.h	38;"	d
SDSS_PIN	config.h	36;"	d
SDSS_PRT	config.h	37;"	d
SIZE	Makefile	/^SIZE=avr-size$/;"	m
SYSCLK	config.h	10;"	d
TRG	Makefile	/^TRG=$(PROJECTNAME).out$/;"	m
UARTWR_DDR	config.h	54;"	d
UARTWR_PIN	config.h	53;"	d
UARTWR_PRT	config.h	52;"	d
UART_RX_BUFSZ	config.h	60;"	d
XLATPD	config.h	24;"	d
XLAT_DDR	config.h	42;"	d
XLAT_PIN	config.h	40;"	d
XLAT_PRT	config.h	41;"	d
_BVOFF	macros.h	13;"	d
_BVON	macros.h	12;"	d
_OFF	macros.h	11;"	d
_ON	macros.h	10;"	d
_VAL	macros.h	14;"	d
action	main.c	/^uint8_t action;         \/\/ current action$/;"	v
all	Makefile	/^all: $(TRG)$/;"	t
argptr	main.c	/^uint8_t* argptr = args; \/\/   ... associated pointer$/;"	v
args	main.c	/^uint8_t args[16];       \/\/ array to store arguments$/;"	v
clean	Makefile	/^clean:$/;"	t
cmdstate	main.c	/^static uint8_t cmdstate;$/;"	v	file:
dbg_init	dbgled.c	/^void dbg_init(void) {$/;"	f
dbg_off	dbgled.c	/^void dbg_off(uint8_t val) {$/;"	f
dbg_on	dbgled.c	/^void dbg_on(uint8_t val) {$/;"	f
dbg_set	dbgled.c	/^void dbg_set(uint8_t val) {$/;"	f
disasm	Makefile	/^disasm: $(DUMPTRG) stats$/;"	t
gdbinit	Makefile	/^gdbinit: $(GDBINITFILE)$/;"	t
get	tlc.c	/^uint16_t get(volatile uint8_t driver[], uint8_t posn) {$/;"	f
get_addr	eeprom.c	/^uint8_t get_addr(void) {$/;"	f
get_baud	eeprom.c	/^uint16_t get_baud(void) {$/;"	f
get_baud_dbl	eeprom.c	/^uint8_t get_baud_dbl(void) {$/;"	f
hex	Makefile	/^hex: $(HEXTRG)$/;"	t
instaddr	main.c	/^uint8_t instaddr = 0;$/;"	v
install	Makefile	/^install: writeflash$/;"	t
led_action	led.c	/^void led_action(void) {$/;"	f
led_set	led.c	/^void led_set(void) {$/;"	f
main	main.c	/^int main(void) {$/;"	f
numargs	main.c	/^uint8_t numargs;        \/\/ number of arguments to expect$/;"	v
receive_data	main.c	/^void receive_data(void) {$/;"	f
rxen	main.c	/^volatile uint8_t rxen = 0;$/;"	v
ser2led	tlc.c	/^uint16_t ser2led(uint8_t ser) {$/;"	f
set	tlc.c	/^void set(volatile uint8_t driver[], uint8_t posn, uint16_t value) {$/;"	f
show_addr	dbgled.c	/^void show_addr(void) {$/;"	f
stats	Makefile	/^stats: $(TRG)$/;"	t
tlc	main.c	/^volatile uint8_t tlc[24];$/;"	v
tlc_drive	tlc.c	/^void tlc_drive(void) {$/;"	f
tlc_init	tlc.c	/^void tlc_init(void) {$/;"	f
uart_data_rdy	uart.c	/^uint8_t uart_data_rdy(void) {$/;"	f
uart_init	uart.c	/^void uart_init(void) {$/;"	f
uart_rx	uart.c	/^uint8_t uart_rx(void) {$/;"	f
uart_rxbuf	main.c	/^volatile uint8_t uart_rxbuf[UART_RX_BUFSZ];$/;"	v
uart_rxbuf_count	main.c	/^volatile uint8_t uart_rxbuf_count = 0;$/;"	v
uart_rxbuf_iptr	main.c	/^volatile uint8_t *uart_rxbuf_iptr = uart_rxbuf;$/;"	v
uart_rxbuf_optr	main.c	/^volatile uint8_t *uart_rxbuf_optr = uart_rxbuf;$/;"	v
writeflash	Makefile	/^writeflash: hex$/;"	t
writefuse	Makefile	/^writefuse:$/;"	t
writeserial	Makefile	/^writeserial: hex$/;"	t
